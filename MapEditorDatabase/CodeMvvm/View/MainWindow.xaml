<Window x:Class="MVVM_Light_eksempel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.ignore.com"
        mc:Ignorable="d ignore"
        d:DesignHeight="311"
        d:DesignWidth="525"
        Title="Pathfinder Character Creator"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="LayoutRoot" Margin="10">
        <!-- Setup the layout as a table with three rows and two columns -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- 
        Fill the entire first row (span two columns) with our general info.
        A StackPanel will layout all its children either horizontal or vertical using their desired size
        -->
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <!--
            {Binding CharacterName} is a short hand version for writing {Binding Path=CharacterName} where Path is a property
            Bindings have many other usefull properties like: Converter, ConverterParameter, Mode, ValidationRules, StringFormat etc.
            -->

            <TextBlock Text="ID" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[0].Id}" />
            <TextBlock Text="PosX" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[0].posX}" />
            <TextBlock Text="PosY" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[0].posY}" />


        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,10,0,-7" Grid.RowSpan="2">
            <TextBlock Text="ID" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[1].Id}" />
            <TextBlock Text="PosX" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[1].posX}" />
            <TextBlock Text="PosY" />
            <TextBox Margin="10,0,0,0" Width="128" Text="{Binding FrontTiless[1].posY}" />
        </StackPanel>

        <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
            <!-- Column width of * means it will fill the remaining space, two columns with * will always be 50/50 -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- 
            Controls are (almost) always stretch aligned both horizontally and vertically as default,
            giving them a fixed size in any dimension will center the control in the given dimension
            -->
            <Button Grid.Column="0" Content="Save" Width="150" Command="{Binding SaveCommand}" Click="Button_Click" Margin="50,39,50,-39" />
            <Button Grid.Column="1" Content="Cancel" Width="150" Command="{Binding CancelCommand}" Margin="50,39,49,-39" />
        </Grid>
    </Grid>
</Window>
